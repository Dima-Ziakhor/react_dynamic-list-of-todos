{"version":3,"sources":["api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["request","url","fetch","then","response","json","TodoList","state","todos","query","selectedTodos","getInputParam","event","setState","map","todo","newTodo","id","Number","target","completed","checked","handleOnChange","name","value","a","this","preparedTodos","searchedByTitleTodos","filter","title","toLowerCase","includes","trim","className","type","onChange","placeholder","userId","classnames","String","readOnly","onClick","props","React","Component","CurrentUser","user","loadUser","prevProps","email","phone","clear","App","selectedUserId","handleSelectUser","handleClear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7db10927.chunk.js","sourcesContent":["import { Todo, User } from '../react-app-env';\n\nconst API_URL = 'https://mate.academy/students-api';\n\nconst request = (url: string) => {\n  return fetch(`${API_URL}${url}`)\n    .then(response => response.json());\n};\n\nexport const getTodos = (): Promise<Todo[]> => {\n  return request('/todos');\n};\n\nexport const getUser = (id: number): Promise<User> => {\n  return request(`/users/${id}`);\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport classnames from 'classnames';\nimport { getTodos } from '../../api/api';\nimport { Todo } from '../../react-app-env';\n\nimport './TodoList.scss';\n\ntype Props = {\n  onClick(id: number): void;\n};\n\ntype State = {\n  todos: Todo[];\n  query: string;\n  selectedTodos: string;\n  // status: boolean;\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state = {\n    todos: [],\n    query: '',\n    selectedTodos: 'all',\n    // status: false,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  getInputParam = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState((state) => ({\n      todos: state.todos.map((todo: Todo) => {\n        const newTodo = todo;\n\n        if (newTodo.id === Number(event.target.id)) {\n          newTodo.completed = event.target.checked;\n        }\n\n        return newTodo;\n      }),\n    }));\n  };\n\n  handleOnChange = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    } as Pick<State, 'query' | 'selectedTodos'>);\n  };\n\n  render() {\n    const {\n      todos, query, selectedTodos,\n    } = this.state;\n\n    const searchedByTitleTodos = todos.filter(\n      (todo: Todo) => todo.title.toLowerCase().includes(query.trim().toLowerCase()),\n    );\n    let preparedTodos: Todo[];\n\n    switch (selectedTodos) {\n      case 'active': {\n        preparedTodos = searchedByTitleTodos.filter((todo: Todo) => !todo.completed);\n        break;\n      }\n\n      case 'completed': {\n        preparedTodos = searchedByTitleTodos.filter((todo: Todo) => todo.completed);\n        break;\n      }\n\n      default: {\n        preparedTodos = searchedByTitleTodos;\n      }\n    }\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <input\n          className=\"TodoList__title-input\"\n          name=\"query\"\n          type=\"text\"\n          value={query}\n          onChange={this.handleOnChange}\n          placeholder=\"Enter title of todo\"\n        />\n\n        <select\n          className=\"TodoList__select\"\n          name=\"selectedTodos\"\n          id=\"select\"\n          onChange={this.handleOnChange}\n          value={selectedTodos}\n        >\n          <option value=\"all\">\n            all\n          </option>\n\n          <option value=\"active\">\n            active\n          </option>\n\n          <option value=\"completed\">\n            completed\n          </option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {\n              preparedTodos.map(({\n                id, userId, title, completed,\n              }) => (\n                <li\n                  className={classnames(\n                    'TodoList__item',\n                    { 'TodoList__item--unchecked': !completed },\n                    { 'TodoList__item--checked': completed },\n                  )}\n                  key={id}\n                >\n                  <label>\n                    <input\n                      id={String(id)}\n                      name=\"status\"\n                      type=\"checkbox\"\n                      onChange={this.getInputParam}\n                      checked={completed}\n                      readOnly\n                    />\n                    <p>{title}</p>\n                  </label>\n\n                  <button\n                    className=\"\n                      TodoList__user-button\n                      TodoList__user-button--selected\n                      button\n                    \"\n                    type=\"button\"\n                    onClick={() => this.props.onClick(userId)}\n                  >\n                    User&nbsp;#\n                    {userId}\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { getUser } from '../../api/api';\nimport { User } from '../../react-app-env';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number;\n  clear(): void;\n};\n\ntype State = {\n  user: User | null;\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <>\n        {\n          user && (\n            <div className=\"CurrentUser\">\n              <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user.id}`}</span></h2>\n\n              <h3 className=\"CurrentUser__name\">{user.name}</h3>\n              <p className=\"CurrentUser__email\">{user.email}</p>\n              <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n              <button\n                className=\"CurrentUser__button-clear\"\n                type=\"button\"\n                onClick={() => this.props.clear()}\n              >\n                Clear\n              </button>\n            </div>\n          )\n        }\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  selectedUserId: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n  };\n\n  handleSelectUser = (id: number) => {\n    this.setState({\n      selectedUserId: id,\n    });\n  };\n\n  handleClear = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            onClick={this.handleSelectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clear={this.handleClear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}